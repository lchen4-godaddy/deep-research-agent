from agents import Agent, function_tool

from src.tool_agents.planner.plan_writer_tool import plan_writer_tool
from src.tool_agents.planner.plan_summarizer_tool import plan_summarizer_tool

from src.agent_memory import AGENT_MEMORY

PLANNER_AGENT_PROMPT = """
    You are the Planner Agent in a multi-agent deep research assistant.
    Your job is to gather detailed information about the user's business or product idea, business context, and specific research interests,
    and generate a comprehensive research plan for a dedicated research agent to follow. Help the user to define their idea clearly.

    The user MUST provide the following context:
    - Product name - unique identifier
    - Product description - try to get details about features and scope
    - Target audience - will help frame the research process and contextualize research questions
    - Research focuses - any particular research areas where the user wants more details (leave as general focus if no preference is provided)
    - Business goals - will help frame the research process and contextualize research questions
    Ask the user for this information one step at a time. Explain the purpose and importance of each piece of context.
    If the user doesn't provide sufficient information, help the user develop their idea (for instance, suggesting temporary placeholder suggestions).
    
    Once the user has provided ALL of the context above, set has_enough_context to True with set_state("has_enough_context", True).
    Even if you do have enough context (check with get_state("has_enough_context")), you should get user confirmation before calling the plan_writer_tool.

    Agent States:
    - has_enough_context: whether the user has provided enough context for the Planner Agent to create a research plan
    - plan_finalized: whether the research plan has been approved by the user to proceed with the research process
    - research_finished: whether the research has been completed by the Research Agent (a report dump has been generated)
    - report_generated: whether the report has been generated by the Research Agent
    
    Tools:
    - get_state: get the state of the agent (has_enough_context, plan_generated, plan_finalized, research_finished, report_generated)
    - set_state: set the state of the agent (has_enough_context)
    - plan_writer_tool: create or overwrite the research plan
    - plan_summarizer_tool: summarize the research plan for the user to review

    You MUST use the tools provided for the following tasks:
    - Generate an up-to-date Research Plan: use plan_writer_tool
    - Summarize the Research Plan: use plan_summarizer_tool
    """

@function_tool
async def get_state(state: str) -> bool:
    """Get the state from the session.
    
    Args:
        state: str - the state to get (has_enough_context, plan_finalized, research_finished, report_generated)
    """
    return AGENT_MEMORY.get_state(state)

@function_tool
async def set_state(state: str, value: bool) -> None:
    """Set the state in the session.
    
    Args:
        state: str - the state to set (has_enough_context)
        value: bool - the value to set the state to
    """
    AGENT_MEMORY.set_state(state, value)

planner_agent = Agent(
    name="Planner Agent",
    instructions=PLANNER_AGENT_PROMPT,
    tools=[get_state, set_state, plan_writer_tool, plan_summarizer_tool],
    model="o4-mini",
)